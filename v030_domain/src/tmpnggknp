use std::collections::BTreeMap as Map;
use std::collections::BTreeSet as Set;

pub struct Voter(pub String);

pub struct Candidate(pub String);

pub struct Score(pub usize);

pub struct AttendenceSheet(pub Set<Voter>);

pub struct Scoreboard {
    pub scores: Map<Candidate, Score>,
    pub blank_score: Score,
    pub invalid_score: Score,
}

impl Scoreboard {
    pub fn new(self, candidates: Vec<Candidate>) -> Self {
        for candidate in candidates {
            self.scores.insert(candidate, Score(0));
        }
        self.blank_score = Score(0);
        self.invalid_score = Score(0);
        self
    }
}

pub struct BallotPaper {
    pub voter: Voter,
    pub candidate: Option<Candidate>,
}

pub enum VoteOutcome {
    AcceptedVote(Voter, Candidate),
    BlankVote(Voter),
    InvalidVote(Voter),
    HasAlreadyVoted(Voter),
}

pub struct VotingMachine {
    voters: AttendenceSheet,
    scoreboard: Scoreboard,
}

impl VotingMachine {
    pub fn new(self) -> Self {
        self.voters = AttendenceSheet::new(Set<Voter>::new());
        self.scoreboard = Scoreboard();
        self
    }
}
